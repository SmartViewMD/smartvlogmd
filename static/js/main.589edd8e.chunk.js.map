{"version":3,"sources":["V.js","ScrollToTop2.js","NavBar.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Wrap","styled","div","Primary","Block","vlogInfo","1","title","sd","v1","2","3","BGstyle","display","margin","width","backgroundSize","V","params","useParams","num","controls","name","style","src","type","withRouter","history","children","useEffect","unlisten","listen","window","scrollTo","NavBar","charSet","content","rel","href","integrity","crossOrigin","class","Navbar","expand","fixed","Nav","Brand","to","className","alt","height","V1","V2","Home","App","exact","path","render","props","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.589edd8e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 1em;\n`;\n\nconst Primary = styled.div`\n  padding-top: 120px;\n  max-width: 650px;\n  margin: 0 auto;\n  font-family: \"Sen\", sans-serif;\n`;\n\nconst Block = styled.div`\n  cursor: pointer;\n  background: transparent;\n  font-size: 16px;\n  border-radius: 3px;\n  border: 2px #fdfdfd;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n  margin-bottom: 6vh;\n  margin-top: 1vh;\n  transition: 0.5s all ease-out;\n  &:hover {\n    //background-color: darkgray;\n    //color: white;\n  }\n\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst vlogInfo = {\n  1: {\n    title: \"How to set up SmartViewMD Application | IOS Devices\",\n    sd:\n      \"Setting up BelleIT’s brand new SmartViewMD web application on your IOS Device, Making a new account, and viewing your readings within the application. Thank you for choosing SmartViewMD!\",\n    v1: \"https://drive.google.com/uc?export=view&id=1_AAQxJdNbHpwB8apL9uxzueKsyBnvE78&alt=mp4\",\n  },\n  2: {\n    title: \"REAL TIME study with, Belle IT CMO, @Dorizabelle | 1 hour *MATLAB*\",\n    sd:\n      \"Today we're getting a 1-hour study session in! I hope this helps with motivation over the wintertime while school is in session. Happy Holidays! - Belle IT CMO, @Dorizabelle\",\n    v1: \"https://drive.google.com/uc?export=view&id=1NmAxD990zjuAE5I2rug6CuI3OvvBiNzy&alt=mp4\",\n  },\n  3: {\n    title: \"Belle IT Website & Mobile App\",\n    sd:\n      \"The Belle IT platform is a tool for clinics and physicians to message patients regarding their Covid-19 test status, and view global analytics regarding their real time Covid-19 condition. This platform was created using React Native libraries and is ideal for medical clinics. This efficient web presence allows clinics to stay connected to patients.\",\n    v1: \"images/P3.jpg\",\n  },\n};\n\nconst BGstyle = {\n  display: \"center\",\n  margin: \"auto\",\n  width: \"40%\",\n  backgroundSize: \"cover\",\n  margin: \"0 1em\",\n  padding: \"0.25em 1em\",\n  minWidth: \"90%\",\n};\n\nconst V = () => {\n  const params = useParams();\n\n  return (\n    <>\n      <div>\n        <Primary>\n          <Wrap>\n            <Block>\n              <h1>{vlogInfo[params.num][\"title\"]}</h1>\n              <br />\n              <video controls name=\"media\" style={BGstyle}>\n                <source src={vlogInfo[params.num][\"v1\"]} type=\"video/mp4\" />\n                <source src={vlogInfo[params.num][\"v1\"]} />\n              </video>\n\n              <br />\n              <br />\n              <br />\n              {vlogInfo[params.num][\"sd\"]}\n            </Block>\n          </Wrap>\n        </Primary>\n      </div>\n    </>\n  );\n};\n\nexport default V;\n","import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop2({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop2);","import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./NavBar.css\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst Wrap=styled.div`\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 1em;\n`\n \nconst Primary=styled.div` \n\npadding-top: 120px;\n    max-width: 650px;\n    margin: 0 auto;\n    font-family: 'Sen', sans-serif;\n`\n\nconst Block = styled.div`\n  cursor: pointer;\n  background: transparent;\n  font-size: 16px;\n  border-radius: 3px;\n  border: 2px #FDFDFD;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n  margin-bottom: 6vh;\n  margin-top: 1vh;\n  transition: 0.5s all ease-out;\n  &:hover {\n    background-color: darkgray;\n    color: white;\n  }\n\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nfunction NavBar() {\n  return (\n    <div>\n      <meta charSet=\"utf-8\" />\n      <meta\n        name=\"viewport\"\n        content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n      />\n      {/* Bootstrap CSS */}\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n        integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n        crossOrigin=\"anonymous\"\n      />\n\n      <header class=\"header\">\n        <Navbar expand=\"lg\" fixed=\"top\">\n        \n          <Nav>\n            <Navbar.Brand to=\"/portfolio\" className=\"nav-brand\">\n              <div className=\"center\">\n                <a href=\"/\" >\n                  <img src=\"./img/svmd_logo.png\" alt=\"\" height={70} ></img>\n                </a>\n              </div>\n            </Navbar.Brand>\n          </Nav>\n\n        </Navbar>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { Component, useRef, useState, useEffect } from \"react\";\nimport styled from 'styled-components';\n\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport V from \"./V\";\n\nimport ScrollToTop2 from \"./ScrollToTop2\";\n\nimport NavBar from './NavBar';\n\nconst Wrap=styled.div`\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 1em;\n`\n \nconst Primary=styled.div` \n\npadding-top: 120px;\n    max-width: 650px;\n    margin: 0 auto;\n    font-family: 'Sen', sans-serif;\n`\n\nconst Block = styled.div`\n  cursor: pointer;\n  background: transparent;\n  font-size: 16px;\n  border-radius: 3px;\n  border: 2px #FDFDFD;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n  margin-bottom: 6vh;\n  margin-top: 1vh;\n  transition: 0.5s all ease-out;\n  &:hover {\n    background-color: darkgray;\n    color: white;\n  }\n\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst V1 = () => (\n<a href = \"/V1\" class=\"nounderline\">\n    <Block>\n      <h1>How to set up SmartViewMD Application | IOS Devices</h1>\n      <p>Setting up BelleIT’s brand new SmartViewMD web application on your IOS Device, Making a new account, and viewing your readings within the application. Thank you for choosing SmartViewMD!</p>      \n    </Block>\n    </a>\n\n)\n\nconst V2 = () => (\n<a href = \"/V2\" class=\"nounderline\">\n    <Block>\n    <h1>REAL TIME study with, Belle IT CMO, @Dorizabelle | 1 hour *MATLAB*</h1>\n      <p>\"Today we're getting a 1-hour study session in! I hope this helps with motivation over the wintertime while school is in session. Happy Holidays!\" - Belle IT CMO, @Dorizabelle</p>\n    </Block>\n    </a>\n)\n\nconst V3 = () => (\n<a href = \"/V2\" class=\"nounderline\">\n    <Block>\n    <h1>V3</h1>\n      <p>This is FaceBook. It was started by Mark Zuckerberg at Harvard.</p>\n      <p>FaceBook is the creator of the framework used to build this website, React.</p>      \n    </Block>\n</a>\n\n)\n\n\nfunction Home() {\n  return (\n<>\n\n      <Wrap className = \"center\">\n      <Primary className = \"center\">        \n        <V1/>\n        <V2/>               \n        \n      </Primary>\n      </Wrap>      \n\n      </>\n  );\n}\n\nexport default Home;\n","import React, { Component, useRef, useState, useEffect } from \"react\";\nimport styled from 'styled-components';\n\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport V from \"./V\";\nimport Home from \"./Home\";\n\nimport ScrollToTop2 from \"./ScrollToTop2\";\n\nimport NavBar from './NavBar';\n\nconst Wrap=styled.div`\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 1em;\n`\n \nconst Primary=styled.div` \n\npadding-top: 120px;\n    max-width: 650px;\n    margin: 0 auto;\n    font-family: 'Sen', sans-serif;\n`\n\nconst Block = styled.div`\n  cursor: pointer;\n  background: transparent;\n  font-size: 16px;\n  border-radius: 3px;\n  border: 2px #FDFDFD;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n  margin-bottom: 6vh;\n  margin-top: 1vh;\n  transition: 0.5s all ease-out;\n  &:hover {\n    background-color: darkgray;\n    color: white;\n  }\n\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst V1 = () => (\n<a href = \"/V1\" class=\"nounderline\">\n    <Block>\n      <h1>V1</h1>\n      <p>This is Google. It's a search engine started by Sergey Brin and Larry Page.</p>\n      <p>PageRank is the search algorithm that started it all. Today it's a multibillion dollar company.</p>      \n    </Block>\n    </a>\n\n)\n\nconst V2 = () => (\n<a href = \"/V2\" class=\"nounderline\">\n    <Block>\n    <h1>V2</h1>\n      <p>This is Amazon. It started off as an online bookstore.</p>\n      <p>Amazon is the owner of AWS, the host this tutorial is targeting.</p>\n    </Block>\n    </a>\n)\n\nconst V3 = () => (\n<a href = \"/V2\" class=\"nounderline\">\n    <Block>\n    <h1>V3</h1>\n      <p>This is FaceBook. It was started by Mark Zuckerberg at Harvard.</p>\n      <p>FaceBook is the creator of the framework used to build this website, React.</p>      \n    </Block>\n</a>\n\n)\n\n\nfunction App() {\n  return (\n<>\n\n<BrowserRouter>\n<NavBar/>\n\n        <ScrollToTop2>\n          <Switch>\n          <Route\n              exact\n              path=\"/\"\n              render={(props) => <Home />}\n            />\n           \n            <Route exact path=\"/V:num\" render={(props) => <V/>}></Route>\n\n          </Switch>\n        </ScrollToTop2>\n        </BrowserRouter>\n   \n\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport NavBar from './NavBar';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}